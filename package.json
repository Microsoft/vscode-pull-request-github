{
  "name": "vscode-pull-request-github",
  "displayName": "GitHub Pull Requests",
  "description": "Pull Request Provider for GitHub",
  "icon": "resources/icons/github_logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-pull-request-github"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/vscode-pull-request-github/issues"
  },
  "enableProposedApi": true,
  "preview": true,
  "version": "0.3.2",
  "publisher": "GitHub",
  "engines": {
    "vscode": "^1.31.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "extensionDependencies": [
    "vscode.git"
  ],
  "main": "./media/extension",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "GitHub Pull Requests",
      "properties": {
        "githubPullRequests.telemetry.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable usage data and errors to be sent to a GitHub online service"
        },
        "githubPullRequests.hosts": {
          "type": "array",
          "default": [],
          "description": "List of host credentials. For example, \"github.hosts\": [ { \"host\": \"https://github.com\", \"token\": \"GITHUB TOKEN\" } ]",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "The host name of the GitHub server (for eg., 'https://github.com')"
              },
              "username": {
                "type": "string",
                "description": "The username to access GitHub (optional)"
              },
              "token": {
                "type": "string",
                "description": "GitHub access token with the following scopes: read:user, user:email, repo, write:discussion"
              }
            }
          }
        },
        "githubPullRequests.logLevel": {
          "type": "string",
          "enum": [
            "info",
            "debug",
            "off"
          ],
          "default": "info",
          "description": "Logging for GitHub Pull Request extension. The log is emitted to the output channel named as GitHub Pull Request."
        },
        "githubPullRequests.includeRemotes": {
          "type": "string",
          "enum": [
            "default",
            "all"
          ],
          "default": "default",
          "description": "By default we only support remotes created by users. If you want to see pull requests from remotes this extension created for pull requests, change this setting to 'all'."
        },
        "telemetry.optout": {
          "type": "boolean",
          "default": false,
          "deprecationMessage": "The setting `telemetry.optout` has been deprecated in favor of `githubPullRequests.telemetry.enabled`.",
          "description": "Disable usage data and errors to be sent to a GitHub online service"
        },
        "github.hosts": {
          "type": "array",
          "default": [],
          "deprecationMessage": "The setting `github.hosts` has been deprecated in favor of `githubPullRequests.hosts`.",
          "description": "List of host credentials. For example, \"github.hosts\": [ { \"host\": \"https://github.com\", \"token\": \"GITHUB TOKEN\" } ]",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "The host name of the GitHub server (for eg., 'https://github.com')"
              },
              "username": {
                "type": "string",
                "description": "The username to access GitHub (optional)"
              },
              "token": {
                "type": "string",
                "description": "GitHub access token with the following scopes: read:user, user:email, repo, write:discussion"
              }
            }
          }
        }
      }
    },
    "views": {
      "scm": [
        {
          "id": "pr",
          "name": "GitHub Pull Requests",
          "when": "config.git.enabled && github:hasGitHubRemotes && workspaceFolderCount != 0"
        },
        {
          "id": "prStatus",
          "name": "Changes In Pull Request",
          "when": "config.git.enabled && github:hasGitHubRemotes && github:inReviewMode"
        }
      ]
    },
    "commands": [
      {
        "command": "auth.inputTokenCallback",
        "title": "Manually Provide Authentication Response",
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.create",
        "title": "Create Pull Request",
        "icon": {
          "light": "resources/icons/light/stage.svg",
          "dark": "resources/icons/dark/stage.svg"
        },
        "category": "GitHub Pull Requests"
      },
      {
        "command": "auth.signout",
        "title": "Sign out of GitHub",
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.pick",
        "title": "Checkout Pull Request",
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.merge",
        "title": "Merge Pull Request",
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.close",
        "title": "Close Pull Request",
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.openPullRequestInGitHub",
        "title": "Open Pull Request in GitHub",
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.refreshPullRequest",
        "title": "Refresh Pull Request",
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.openFileInGitHub",
        "title": "Open File in GitHub",
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.openDiffView",
        "title": "Open Diff View",
        "category": "GitHub Pull Requests",
        "icon": {
          "light": "resources/icons/light/open-change.svg",
          "dark": "resources/icons/dark/open-change.svg"
        }
      },
      {
        "command": "pr.openChangedFile",
        "title": "Open Changed File in PR",
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.openDescription",
        "title": "View Pull Request Description",
        "category": "GitHub Pull Requests",
        "when": "github:inReviewMode"
      },
      {
        "command": "pr.openDescriptionToTheSide",
        "title": "Open Pull Request Description to the Side",
        "icon": {
          "light": "resources/icons/light/split-editor-horizontal.svg",
          "dark": "resources/icons/dark/split-editor-horizontal-inverse.svg"
        }
      },
      {
        "command": "review.openFile",
        "title": "Open File",
        "icon": {
          "light": "resources/icons/light/open-file.svg",
          "dark": "resources/icons/dark/open-file.svg"
        }
      },
      {
        "command": "review.suggestDiff",
        "title": "Suggest Edit"
      },
      {
        "command": "pr.refreshList",
        "title": "Refresh Pull Requests List",
        "icon": {
          "dark": "resources/icons/dark/refresh.svg",
          "light": "resources/icons/light/refresh.svg"
        },
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.refreshChanges",
        "title": "Refresh",
        "icon": {
          "dark": "resources/icons/dark/refresh.svg",
          "light": "resources/icons/light/refresh.svg"
        },
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.deleteLocalBranch",
        "title": "Delete Local Branch",
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.signin",
        "title": "Sign in to GitHub",
        "category": "GitHub Pull Requests"
      },
      {
        "command": "pr.signinAndRefreshList",
        "title": "Sign in and Refresh",
        "category": "GitHub Pull Requests"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "pr.pick",
          "when": "false"
        },
        {
          "command": "review.openFile",
          "when": "false"
        },
        {
          "command": "pr.openChangedFile",
          "when": "false"
        },
        {
          "command": "pr.close",
          "when": "config.git.enabled && github:inReviewMode"
        },
        {
          "command": "pr.create",
          "when": "config.git.enabled && !github.inReviewMode"
        },
        {
          "command": "pr.merge",
          "when": "config.git.enabled && github:inReviewMode"
        },
        {
          "command": "pr.openPullRequestInGitHub",
          "when": "config.git.enabled && github:inReviewMode"
        },
        {
          "command": "pr.openFileInGitHub",
          "when": "false"
        },
        {
          "command": "pr.refreshPullRequest",
          "when": "false"
        },
        {
          "command": "pr.deleteLocalBranch",
          "when": "false"
        },
        {
          "command": "pr.openDiffView",
          "when": "false"
        },
        {
          "command": "pr.openDescriptionToTheSide",
          "when": "false"
        },
        {
          "command": "pr.openDescription",
          "when": "config.git.enabled && github:inReviewMode"
        },
        {
          "command": "pr.refreshList",
          "when": "config.git.enabled && github:hasGitHubRemotes"
        },
        {
          "command": "pr.refreshChanges",
          "when": "false"
        },
        {
          "command": "pr.signin",
          "when": "config.git.enabled && github:hasGitHubRemotes"
        },
        {
          "command": "pr.signinAndRefreshList",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "pr.create",
          "when": "view == pr",
          "group": "navigation"
        },
        {
          "command": "pr.refreshList",
          "when": "view == pr",
          "group": "navigation"
        },
        {
          "command": "pr.refreshChanges",
          "when": "view == prStatus",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "pr.pick",
          "when": "view == pr && viewItem =~ /pullrequest(:local)?:nonactive|description/",
          "group": "pullrequest@1"
        },
        {
          "command": "pr.refreshPullRequest",
          "when": "view == pr && viewItem =~ /pullrequest|description/",
          "group": "pullrequest@2"
        },
        {
          "command": "pr.openPullRequestInGitHub",
          "when": "view == pr && viewItem =~ /pullrequest|description/",
          "group": "pullrequest@3"
        },
        {
          "command": "pr.deleteLocalBranch",
          "when": "view == pr && viewItem =~ /pullrequest:local:nonactive/",
          "group": "pullrequest@4"
        },
        {
          "command": "pr.openFileInGitHub",
          "when": "view =~ /(pr|prStatus)/ && viewItem =~ /filechange/"
        },
        {
          "command": "pr.openDescriptionToTheSide",
          "group": "inline",
          "when": "view =~ /(pr|prStatus)/ && viewItem =~ /description/"
        },
        {
          "command": "review.openFile",
          "group": "inline",
          "when": "config.git.openDiffOnClick && view == prStatus && viewItem =~ /filechange(?!:DELETE)/"
        },
        {
          "command": "pr.openDiffView",
          "group": "inline",
          "when": "!config.git.openDiffOnClick && view == prStatus && viewItem =~ /filechange(?!:DELETE)/"
        }
      ],
      "editor/title": [
        {
          "command": "review.openFile",
          "group": "navigation",
          "when": "resourceScheme =~ /^review$/"
        }
      ],
      "scm/title": [
        {
          "command": "review.suggestDiff",
          "when": "scmProvider == git && github:inReviewMode",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "webpack --env.production",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "compile": "tsc -p ./",
    "watch": "webpack --watch --env.development",
    "test": "tsc -p ./ && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/chai": "^4.1.4",
    "@types/debounce": "^3.0.0",
    "@types/keytar": "^4.0.1",
    "@types/lodash": "^4.14.106",
    "@types/markdown-it": "^0.0.5",
    "@types/mocha": "^5.2.2",
    "@types/node": "*",
    "@types/node-fetch": "^2.1.4",
    "@types/query-string": "^6.1.1",
    "@types/webpack": "^4.4.10",
    "@types/ws": "^5.1.2",
    "css-loader": "^0.28.11",
    "del": "^3.0.0",
    "gulp": "3.9.1",
    "gulp-mocha": "^6.0.0",
    "gulp-typescript": "^5.0.0-alpha.2",
    "gulp-util": "^3.0.8",
    "minimist": "^1.2.0",
    "mocha": "^5.2.0",
    "style-loader": "^0.21.0",
    "svg-inline-loader": "^0.8.0",
    "ts-loader": "^4.0.1",
    "tslint": "^5.11.0",
    "tslint-webpack-plugin": "^1.2.2",
    "typescript": "^2.1.4",
    "webpack": "^4.1.0",
    "webpack-cli": "^2.0.10"
  },
  "dependencies": {
    "@octokit/rest": "^15.15.1",
    "apollo-boost": "^0.1.22",
    "apollo-link-context": "^1.0.12",
    "axios": "^0.18.0",
    "debounce": "^1.2.0",
    "es6-promise": "^4.2.5",
    "git-credential-node": "^1.1.0",
    "graphql": "^14.0.2",
    "iconv-lite": "0.4.23",
    "js-base64": "^2.4.9",
    "markdown-it": "^8.4.0",
    "markdown-it-checkbox": "^1.1.0",
    "markdown-it-sanitizer": "github:rebornix/markdown-it-sanitizer#10d930d08236ef4609ad10a6087745461d91cc7c",
    "moment": "^2.22.1",
    "node-emoji": "^1.8.1",
    "node-fetch": "^2.1.1",
    "query-string": "^6.2.0",
    "ssh-config": "^1.1.3",
    "telemetry-github": "https://github.com/shana/telemetry/releases/download/0.3.2/telemetry-github-v0.3.2.tgz",
    "tunnel": "0.0.6",
    "vscode": "^1.1.18",
    "ws": "^6.0.0"
  },
  "optionalDependencies": {
    "spawn-sync": "^2.0.0"
  },
  "license": "MIT"
}
